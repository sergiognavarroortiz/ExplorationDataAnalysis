gdp$check = check
gdp$check2 = check2
y = with(gdp, Rank[check])
y = with(gdp, Rank[check2])
y
y = as.matrix(y)
y = as.numeric(y)
class(y[1:1])
#recode missing values
y[y==""] <- NA
str(y)
# exclude missing vals from analysis
mean(y, na.rm=TRUE)
url3 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3, destfile = "./data/gdp.csv")
download.file(url4, destfile = "./data/education.csv")
gdp = read.csv("./data/gdp.csv",skip=1)
edu = read.csv("./data/education.csv")
labels(gdp)
labels(edu)
gdp
str(gdp[100,1])
str(edu)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(edu$CountryCode)
attributes(edu$CountryCode)
y = levels(edu$CountryCode)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
# how many codes match
table(gdp$X %in% edu$CountryCode)
library(plyr)
#rename columns
 gdp$X.8 = NULL
gdp$X.7 = NULL
gdp$X.6 = NULL
gdp$X.2 = NULL
gdp = rename(gdp, c(X="CountryCode", "GDP"="Rank", X.3= "Description", X.4="GDP", X.5="Extra"))
str(gdp)
 table(x %in% y)
# sort
gdp[with(gdp, order(GDP)), ]
x = gdp[1:193,]
y = subset(edu, CountryCode != " ")
x
str(x)
str(y)
table(y$CountryCode %in% x$CountryCode)
order.gdp <- order(gdp$GDP)
order.gdp
head(gdp$GDP[order.gdp])
gdp[gdp$Rank,]
labels(edu)
levels(edu$Income.Group)
x = with(edu, CountryCode[Income.Group == "High income: nonOECD"])
highIncOECD = with(edu, CountryCode[Income.Group == "High income: OECD"])
check = sapply(gdp$CountryCode, function(a) a %in% x)
check2 = sapply(gdp$CountryCode, function(a) a %in% highIncOECD)
check2
gdp$check = check
gdp$check2 = check2
y = with(gdp, Rank[check])
y = with(gdp, Rank[check2])
y
y = as.matrix(y)
y = as.numeric(y)
class(y[1:1])
#recode missing values
y[y==""] <- NA
str(y)
# exclude missing vals from analysis
mean(y, na.rm=TRUE)
names(gdp)
names(edu)
gdp = rename(gdp, c("CountryCode"="CountryCode1"))
mergedData = merge(gdp, edu)
str(mergedData)
attributes(mergedData$Income.Group)
levels(gdp$Rank)
result = subset(mergedData, Income.Group == "Lower middle income")
str(result)
table(result)
as.numeric(mergedData$Rank)
result$Rank
q()
names(gdp)
names(edu)
gdp = rename(gdp, c("CountryCode"="CountryCode1"))
mergedData = merge(gdp, edu)
str(mergedData)
attributes(mergedData$Income.Group)
levels(gdp$Rank)
result = subset(mergedData, Income.Group == "Lower middle income")
str(result)
table(result)
as.numeric(mergedData$Rank)
result$Rank
str(mergedData)
newGdpData <- gdpData[6:194, c(1, 2, 4, 5)]
colnames(newGdpData) <- c("CountryCode", "Ranking", "Economy", "GDP")
rownames(newGdpData) <- NULL # renumbering
educationData <- read.csv("./data/education.csv")
names(educationData)
mergedData <- merge(newGdpData, educationData, by.x="CountryCode", by.y="CountryCode", all=TRUE)
head(mergedData)
names(mergedData) <- tolower(names(mergedData))
a <- as.character(mergedData[,13])
length(grep("Fiscal year end: June", a))
# 13
names(gdp)
names(edu)
gdp = rename(gdp, c("CountryCode"="CountryCode1"))
mergedData = merge(gdp, edu)
str(mergedData)
attributes(mergedData$Income.Group)
levels(gdp$Rank)
result = subset(mergedData, Income.Group == "Lower middle income")
str(result)
table(result)
as.numeric(mergedData$Rank)
result$Rank
q()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, destfile = "gdp.csv", method = "curl")
gdp <- read.csv("./gdp.csv")
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl1, destfile = "edu.csv", method = "curl")
edu <- read.csv("./edu.csv")
X=CountryCode
names(gdp)
names(edu)
head(gdp)
head(edu)
gdpclean<-gdp[5:194,]
mergedData=as.data.frame(merge(gdpclean,edu,by.x="X",by.y="CountryCode"))
mergedData$Gross.domestic.product.2012 = as.numeric(as.character(mergedData$Gross.domestic.product.2012))
summary(mergedData[mergedData$Income.Group=="High income: OECD",])
gdpclean<-gdp[5:194,]
mergedData=as.data.frame(merge(gdpclean,edu,by.x="X",by.y="CountryCode"))
url3 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3, destfile = "./data/gdp.csv")
download.file(url4, destfile = "./data/education.csv")
gdp = read.csv("./data/gdp.csv",skip=1)
edu = read.csv("./data/education.csv")
labels(gdp)
labels(edu)
gdp
str(gdp[100,1])
str(edu)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(edu$CountryCode)
attributes(edu$CountryCode)
y = levels(edu$CountryCode)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
# how many codes match
table(gdp$X %in% edu$CountryCode)
library(plyr)
#rename columns
 gdp$X.8 = NULL
gdp$X.7 = NULL
gdp$X.6 = NULL
gdp$X.2 = NULL
gdp = rename(gdp, c(X="CountryCode", "GDP"="Rank", X.3= "Description", X.4="GDP", X.5="Extra"))
str(gdp)
 table(x %in% y)
# sort
gdp[with(gdp, order(GDP)), ]
x = gdp[1:193,]
y = subset(edu, CountryCode != " ")
x
str(x)
str(y)
table(y$CountryCode %in% x$CountryCode)
order.gdp <- order(gdp$GDP)
order.gdp
head(gdp$GDP[order.gdp])
gdp[gdp$Rank,]
labels(edu)
levels(edu$Income.Group)
x = with(edu, CountryCode[Income.Group == "High income: nonOECD"])
highIncOECD = with(edu, CountryCode[Income.Group == "High income: OECD"])
check = sapply(gdp$CountryCode, function(a) a %in% x)
check2 = sapply(gdp$CountryCode, function(a) a %in% highIncOECD)
check2
gdp$check = check
gdp$check2 = check2
y = with(gdp, Rank[check])
y = with(gdp, Rank[check2])
y
y = as.matrix(y)
y = as.numeric(y)
class(y[1:1])
#recode missing values
y[y==""] <- NA
str(y)
# exclude missing vals from analysis
mean(y, na.rm=TRUE)
url3 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
url4 = "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url3, destfile = "./data/gdp.csv")
download.file(url4, destfile = "./data/education.csv")
gdp = read.csv("./data/gdp.csv",skip=1)
edu = read.csv("./data/education.csv")
labels(gdp)
labels(edu)
gdp
str(gdp[100,1])
str(edu)
table(gdp$X, gdp$Gross.domestic.product.2012)
str(edu$CountryCode)
attributes(edu$CountryCode)
y = levels(edu$CountryCode)
str(gdp$X)
attributes(gdp$X)
x = levels(gdp$X)
# how many codes match
table(gdp$X %in% edu$CountryCode)
library(plyr)
#rename columns
 gdp$X.8 = NULL
gdp$X.7 = NULL
gdp$X.6 = NULL
gdp$X.2 = NULL
gdp = rename(gdp, c(X="CountryCode", "GDP"="Rank", X.3= "Description", X.4="GDP", X.5="Extra"))
str(gdp)
 table(x %in% y)
# sort
gdp[with(gdp, order(GDP)), ]
x = gdp[1:193,]
y = subset(edu, CountryCode != " ")
x
str(x)
str(y)
table(y$CountryCode %in% x$CountryCode)
order.gdp <- order(gdp$GDP)
order.gdp
head(gdp$GDP[order.gdp])
gdp[gdp$Rank,]
labels(edu)
levels(edu$Income.Group)
x = with(edu, CountryCode[Income.Group == "High income: nonOECD"])
highIncOECD = with(edu, CountryCode[Income.Group == "High income: OECD"])
check = sapply(gdp$CountryCode, function(a) a %in% x)
check2 = sapply(gdp$CountryCode, function(a) a %in% highIncOECD)
check2
gdp$check = check
gdp$check2 = check2
y = with(gdp, Rank[check])
y = with(gdp, Rank[check2])
y
y = as.matrix(y)
y = as.numeric(y)
class(y[1:1])
#recode missing values
y[y==""] <- NA
str(y)
# exclude missing vals from analysis
mean(y, na.rm=TRUE) 
# download the image
url1 = "http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url1, destfile = "./data/jeff.jpg")
list.files("./data")
install.packages("jpeg")
library("jpeg")
# load the image
pic = readJPEG("./data/jeff.jpg", native = "TRUE")
head(pic)
summary(pic)
str(pic)
quantile(pic, probs = c(30, 50, 80)/100)
str(pic)
library(sqldf)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "acs.csv", method = "curl")
dateDownloaded <- date()
acs <- read.table("./acs.csv",sep=",",header=TRUE)
head(acs)
# households on greater than 10 acres who sold more than $10,000 worth of agriculture products
# ACR=3 AND AGS=6
agricultureLogical<-(acs$ACR==3 & acs$AGS==6)
which(agricultureLogical)
class(agricultureLogical)
q()
newGdpData <- gdpData[6:194, c(1, 2, 4, 5)]
colnames(newGdpData) <- c("CountryCode", "Ranking", "Economy", "GDP")
rownames(newGdpData) <- NULL # renumbering
educationData <- read.csv("./data/education.csv")
names(educationData)
mergedData <- merge(newGdpData, educationData, by.x="CountryCode", by.y="CountryCode", all=TRUE)
head(mergedData)
names(mergedData) <- tolower(names(mergedData))
a <- as.character(mergedData[,13])
length(grep("Fiscal year end: June", a))
q()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, 
sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subset data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Convert dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot one
hist(data$Global_active_power, main="Global Active Power",
     xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Saving to file
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, 
sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
     ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
dev.off()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, 
sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 3
with(data, {
    plot(Sub_metering_1~Datetime, type="l",
         ylab="Global Active Power (kilowatts)", xlab="")
    lines(Sub_metering_2~Datetime,col='Red')
    lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
       legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Saving to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, 
sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 4
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(data, {
    plot(Global_active_power~Datetime, type="l",
         ylab="Global Active Power (kilowatts)", xlab="")
    plot(Voltage~Datetime, type="l",
         ylab="Voltage (volt)", xlab="")
    plot(Sub_metering_1~Datetime, type="l",
         ylab="Global Active Power (kilowatts)", xlab="")
    lines(Sub_metering_2~Datetime,col='Red')
    lines(Sub_metering_3~Datetime,col='Blue')
    legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",
           legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
    plot(Global_reactive_power~Datetime, type="l",
         ylab="Global Rective Power (kilowatts)",xlab="")
})
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
q()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subset data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Convert dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot one
hist(data$Global_active_power, main="Global Active Power",
     xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Saving to file
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
save.image("C:\\Users\\Sergio Navarro\\Documents\\Plot1.RData")
q()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 2
plot(data$Global_active_power~data$Datetime, type="l",
     ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png, file="plot2.png", height=480, width=480)
save.image("C:\\Users\\Sergio Navarro\\Documents\\Plot 2.RData")
q()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subset data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Convert dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot one
hist(data$Global_active_power, main="Global Active Power",
     xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Saving to file
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
save.image("C:\\Users\\Sergio Navarro\\Documents\\Plot 1.RData")
q()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 3
with(data, {
    plot(Sub_metering_1~Datetime, type="l",
         ylab="Global Active Power (kilowatts)", xlab="")
    lines(Sub_metering_2~Datetime,col='Red')
    lines(Sub_metering_3~Datetime,col='Blue')
})
legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2,
       legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Saving to file
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
save.image("C:\\Users\\Sergio Navarro\\Documents\\Plt 3.RData")
q()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subsetting the data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Converting dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot 4
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
with(data, {
    plot(Global_active_power~Datetime, type="l",
         ylab="Global Active Power (kilowatts)", xlab="")
    plot(Voltage~Datetime, type="l",
         ylab="Voltage (volt)", xlab="")
    plot(Sub_metering_1~Datetime, type="l",
         ylab="Global Active Power (kilowatts)", xlab="")
    lines(Sub_metering_2~Datetime,col='Red')
    lines(Sub_metering_3~Datetime,col='Blue')
    legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",
           legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
    plot(Global_reactive_power~Datetime, type="l",
         ylab="Global Rective Power (kilowatts)",xlab="")
})
## Saving to file
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
save.image("C:\\Users\\Sergio Navarro\\Documents\\Plot 4.RData")
q()
pwd()
getwd()
## Getting full dataset
data_fulldataset <- read.csv("C:/Users/Sergio Navarro/Documents/household_power_consumption.txt", header=T, sep=';', na.strings="?",
                      nrows=2075259, check.names=F, stringsAsFactors=F, comment.char="", quote='\"')
data_fulldataset$Date <- as.Date(data_fulldataset$Date, format="%d/%m/%Y")
## Subset data
data <- subset(data_fulldataset, subset=(Date >= "2007-02-01" & Date <= "2007-02-02"))
rm(data_fulldataset)
## Convert dates
datetime <- paste(as.Date(data$Date), data$Time)
data$Datetime <- as.POSIXct(datetime)
## Plot one
hist(data$Global_active_power, main="Global Active Power",
     xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
## Saving to file
dev.copy(png, file="plot1.png", height=480, width=480)
dev.off()
q()
